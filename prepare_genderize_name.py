import sys
import numpy as np
import pandas as pd
import gzip
import gc
import os

import os,re,codecs,json,sys,zipfile,time,csv
from functools import reduce
import pandas as pd

from pandas import Series, DataFrame
import pandas as pd
import numpy as np
import logging
import requests, json

import spacy
import textacy
import textacy.preprocessing as tprep
import re

#Genderize using name information.
filein="/volumes/lacie/metoo/raw/20240802_namelist_piece"+sys.argv[1]+".csv"
fileout1="/volumes/lacie/metoo/raw/20240812_authorid_name_piece"+sys.argv[1]+".csv"
fileout2="/volumes/lacie/metoo/raw/20240812_name_togender_piece"+sys.argv[1]+".csv"

print(filein)
print(fileout1)
print(fileout2)


#Genderize using name information.
print("read data "+str(sys.argv[1]))

test=pd.read_csv(filein,header=0) #67,179,194 

print("Handle Special Characters "+str(sys.argv[1]))
#Handle Special Characters
test['name'] = test.apply(lambda row: tprep.remove.accents(row['raw_author_name']), axis=1)
test['name'] = test.apply(lambda row: tprep.remove.brackets(row['name']), axis=1)
test['name'] = test.apply(lambda row: tprep.normalize.quotation_marks(row['name']), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(">",""), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("*",""), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("？",""), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("‐","-"), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("."," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("="," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("&NA"," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("&"," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("#"," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("\\"," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" de "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" da "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" van "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" von "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" la "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" las "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" le "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" del "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" dos "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" De "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Da "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Van "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Von "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" La "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Las "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Le "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Del "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace(" Dos "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("Jr "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("Dr "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("Ms "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("  "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("  "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].replace("  "," "), axis=1)
test['name'] = test.apply(lambda row: row['name'].strip(), axis=1)

test['newname'] = test['name']

print("Remove cases without Firstname "+str(sys.argv[1]))
#Remove cases without Firstname
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z][A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] Mc([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z][a-z'] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+) [A-Z][a-z']$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z'][A-Z]+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] ([A-Z][a-z'][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+), [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] \-[A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] \-[A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

print("Handle Hyphens "+str(sys.argv[1]))
#Handle Hyphens
test['newname'] = test.apply(lambda row:  "" if re.match(r"^([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z][A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+\-[A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+)\-([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+\-[A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+\-[A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+\-[A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)\-([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z]\-[A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[BCDFGHJKLMNPQRSTVWXYZ][BCDFGHJKLMNPQRSTVWXYZ]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[BCDFGHJKLMNPQRSTVWXYZ][bcdfghjklmnpqrstvwxyz]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[bcdfghjklmnpqrstvwxyz][bcdfghjklmnpqrstvwxyz]$", row['newname'])!=None else row['newname'] , axis=1)

print("Handle Chinese Names "+str(sys.argv[1]))
test['newname'] = test.apply(lambda row:  re.match(r"^Zhao ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Zhao ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Qian ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Qian ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Sun ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Sun ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Li ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Li ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Zhou ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Zhou ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Wu ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Wu ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Zheng ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Zheng ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Wang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Wang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Feng ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Feng ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Chen ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Chen ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Shen ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Shen ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Jiang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Jiang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Cheng ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Cheng ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Yang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Yang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Han ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Han ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Zhu ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Zhu ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Xu ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Xu ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Cao ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Cao ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Tao ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Tao ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Luo ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Luo ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Xiong ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Xiong ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Shi ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Shi ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Zhang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Zhang ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^Lin ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Lin ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^ZHAO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^ZHAO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^QIAN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^QIAN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^SUN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^SUN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^LI ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^LI ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^ZHOU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^ZHOU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^WU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^WU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^ZHENG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^ZHENG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^WANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^WANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^FENG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^FENG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^CHEN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^CHEN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^SHEN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^SHEN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^JIANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^JIANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^CHENG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^CHENG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^YANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^YANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^HAN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^HAN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^ZHU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^ZHU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^XU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^XU ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^CAO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^CAO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^TAO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^TAO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^LUO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^LUO ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^XIONG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^XIONG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^SHI ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^SHI ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^ZHANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^ZHANG ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^LIN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^LIN ([A-Z][a-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhao$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhao$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Qian$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Qian$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Sun$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Sun$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Li$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Li$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhou$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhou$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Wu$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Wu$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zheng$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zheng$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Wang$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Wang$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Feng$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Feng$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Chen$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Chen$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Shen$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Shen$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Jiang$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Jiang$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Cheng$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Cheng$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Yang$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Yang$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Han$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Han$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhu$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhu$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Xu$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Xu$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Cao$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Cao$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Tao$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Tao$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Luo$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Luo$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Xiong$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Xiong$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Shi$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Shi$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhang$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Zhang$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Lin$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) Lin$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHAO$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHAO$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) QIAN$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) QIAN$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) SUN$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) SUN$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) LI$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) LI$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHOU$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHOU$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) WU$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) WU$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHENG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHENG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) WANG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) WANG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) FENG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) FENG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) CHEN$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) CHEN$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) SHEN$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) SHEN$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) JIANG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) JIANG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) CHENG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) CHENG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) YANG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) YANG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) HAN$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) HAN$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHU$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHU$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) XU$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) XU$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) CAO$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) CAO$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) TAO$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) TAO$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) LUO$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) LUO$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) XIONG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) XIONG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) SHI$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) SHI$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHANG$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) ZHANG$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) LIN$", row['newname']).group(1) if re.match(r"^([A-Z][a-z]+[A-Z][a-z]+) LIN$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^Yip ([A-Za-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Yip ([A-Za-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Za-z]+[A-Z][a-z]+) Yip$", row['newname']).group(1) if re.match(r"^([A-Za-z]+[A-Z][a-z]+) Yip$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^YIP ([A-Za-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^YIP ([A-Za-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Za-z]+[A-Z][a-z]+) YIP$", row['newname']).group(1) if re.match(r"^([A-Za-z]+[A-Z][a-z]+) YIP$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^Que ([A-Za-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^Que ([A-Za-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Za-z]+[A-Z][a-z]+) Que$", row['newname']).group(1) if re.match(r"^([A-Za-z]+[A-Z][a-z]+) Que$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^QUE ([A-Za-z]+[A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^QUE ([A-Za-z]+[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Za-z]+[A-Z][a-z]+) QUE$", row['newname']).group(1) if re.match(r"^([A-Za-z]+[A-Z][a-z]+) QUE$", row['newname'])!=None else row['newname'] , axis=1)

print("Find Firstname "+str(sys.argv[1]))
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) ([a-z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) ([a-z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z]\-[A-Z] ([A-Z][a-z']+) ([A-z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z]\-[A-Z] ([A-Z][a-z']+) ([A-z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)


test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] [A-Z] [A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] [A-Z] [A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+) [A-Z]$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z] [A-Z]$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+)[A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+)[A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z] [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][A-Z][A-Z]+) ([A-Z][A-Z][A-Z]+)$", row['newname']).group(1) if re.match(r"^([A-Z][A-Z][A-Z]+) ([A-Z][A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][A-Z][A-Z]+) ([A-Z][A-Z][A-Z]+) ([A-Z][A-Z][A-Z]+)$", row['newname']).group(1) if re.match(r"^([A-Z][A-Z][A-Z]+) ([A-Z][A-Z][A-Z]+) ([A-Z][A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][A-Z][A-Z]+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][A-Z][A-Z]+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+)([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+)([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z]([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z]([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z]([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z]([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z]$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) [A-Z] ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+[A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+[A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

print("Lastnames with O' D' "+str(sys.argv[1]))
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) O'([A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] O'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] O'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) O'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] [A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^O'([A-Z][a-z]+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^O'([A-Z][a-z]+) [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^O'([A-Z][a-z]+) [A-Z] [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z][A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^O'([A-Z][a-z]+) [A-Z][A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^O'([A-Z][A-Z][A-Z]+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] O'([A-Z][A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] O'([A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^O'([A-Z][a-z]+), [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] \-[A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] [A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] \-[A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] [A-Z] O'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] [A-Z] [A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^D'([A-Z][a-z]+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^D'([A-Z][a-z]+) [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^D'([A-Z][a-z]+) [A-Z] [A-Z] [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z][A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^D'([A-Z][a-z]+) [A-Z][A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^D'([A-Z][A-Z][A-Z]+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] D'([A-Z][A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [A-Z] D'([A-Z][A-Z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^D'([A-Z][a-z]+), [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] \-[A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] [A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] \-[A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] [a-z] [A-Z] D'([A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)

test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) D'([A-Z][a-z]+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] D'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] D'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) [A-Z] [A-Z] D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] [A-Z] ([A-Z][a-z']+) D'([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

print("Names like McDonald "+str(sys.argv[1]))
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) Mc([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) Mc([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) Mc([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) Mc([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) Mc([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) Mc([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z]) Mc([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z]) Mc([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Za-z']+) Mc([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Za-z']+) Mc([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

print(" Cases with comma (last name first) "+str(sys.argv[1]))
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+), ([A-Z][a-z']+)$", row['newname']).group(2) if re.match(r"^([A-Z][a-z']+), ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+), ([A-Z][a-z']+) [A-Z]$", row['newname']).group(2) if re.match(r"^([A-Z][a-z']+), ([A-Z][a-z']+) [A-Z]$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][A-Z][A-Z]+), ([A-Z][a-z']+)$", row['newname']).group(2) if re.match(r"^([A-Z][A-Z][A-Z]+), ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)

print("More about quotes "+str(sys.argv[1]))
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+)([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+[A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+[A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+[A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^([A-Z][a-z']+) ([A-Z][a-z']+) ([A-Z][a-z']+[A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+[A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+) ([A-Z][a-z']+[A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  re.match(r"^[A-Z] ([A-Z][a-z']+[A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname']).group(1) if re.match(r"^[A-Z] ([A-Z][a-z']+[A-Z][a-z']+) ([A-Z][a-z']+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z] O'([A-Z][a-z']+\-[A-Z][a-z]+)$", row['newname'])!=None else row['newname'] , axis=1)
test['newname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z]'$", row['newname'])!=None else row['newname'] , axis=1)

print("Handle names not expressed in English Letters "+str(sys.argv[1]))
test[['name1','name2','name3','name4']]= test['newname'].str.split(" ", n=3, expand=True)
test['firstname'] = test['name1']
test['firstname'] = test.apply(lambda row:  "" if re.match(r"^[A-Z]$", row['firstname'])!=None else row['firstname'] , axis=1)
test['firstname'] = test.apply(lambda row:  "" if re.match(r"^and$", row['firstname'])!=None else row['firstname'] , axis=1)

print("Outfile author-id, name "+str(sys.argv[1]))
test=test[['author_id','raw_author_name','num_works','firstname']]
test.to_csv(fileout1,index=False)

print("Outfile unique names "+str(sys.argv[1]))
test_unique_name=test.groupby(['firstname']).agg({'author_id':'count'})
test_unique_name=test_unique_name.reset_index()
test_unique_name=test_unique_name.drop(columns={'author_id'})
test_unique_name.to_csv(fileout2,index=False)

